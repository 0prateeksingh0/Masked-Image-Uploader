{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prate\\\\Downloads\\\\Assignment\\\\masked-image-uploader\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport CanvasDraw from 'react-canvas-draw';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imageSrc, setImageSrc] = useState(null);\n  const [brushSize, setBrushSize] = useState(5);\n  const [image, setImage] = useState(null);\n  const canvasRef = useRef(null);\n\n  // Handle Image Upload\n  const handleImageUpload = async event => {\n    const file = event.target.files[0];\n    setImage(file);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Uploaded Image:', response.data);\n      setImageSrc(response.data.file_location); // Set the image source for the canvas\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n\n  // Handle Mask Export\n  const handleExport = () => {\n    if (canvasRef.current) {\n      const maskDataUrl = canvasRef.current.getDataURL(\"image/png\");\n      const link = document.createElement('a');\n      link.href = maskDataUrl;\n      link.download = 'mask.png';\n      link.click();\n      // Upload mask to server after export\n      uploadMask(maskDataUrl);\n    }\n  };\n\n  // Handle Mask Upload\n  const uploadMask = async maskDataUrl => {\n    const formData = new FormData();\n    formData.append('file', dataURLtoFile(maskDataUrl, 'mask.png'));\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/upload-mask/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Uploaded Mask:', response.data);\n    } catch (error) {\n      console.error('Error uploading mask:', error);\n    }\n  };\n\n  // Convert Data URL to File for uploading\n  const dataURLtoFile = (dataUrl, filename) => {\n    const arr = dataUrl.split(',');\n    const mime = arr[0].match(/:(.*?);/)[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, {\n      type: mime\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Image Inpainting Widget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), imageSrc && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CanvasDraw, {\n          ref: canvasRef,\n          imgSrc: imageSrc,\n          brushColor: \"white\",\n          brushRadius: brushSize,\n          canvasWidth: 500,\n          canvasHeight: 500\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setBrushSize(brushSize + 1),\n            children: \"Increase Brush Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setBrushSize(brushSize - 1),\n            children: \"Decrease Brush Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExport,\n          children: \"Save Mask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Original Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageSrc,\n            alt: \"Original\",\n            width: \"300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"55WcMIBe2GloCOcsQQhosgM12jA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","axios","CanvasDraw","jsxDEV","_jsxDEV","App","_s","imageSrc","setImageSrc","brushSize","setBrushSize","image","setImage","canvasRef","handleImageUpload","event","file","target","files","formData","FormData","append","response","post","headers","console","log","data","file_location","error","handleExport","current","maskDataUrl","getDataURL","link","document","createElement","href","download","click","uploadMask","dataURLtoFile","dataUrl","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","ref","imgSrc","brushColor","brushRadius","canvasWidth","canvasHeight","onClick","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/prate/Downloads/Assignment/masked-image-uploader/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport CanvasDraw from 'react-canvas-draw';\n\nfunction App() {\n  const [imageSrc, setImageSrc] = useState(null);\n  const [brushSize, setBrushSize] = useState(5);\n  const [image, setImage] = useState(null);\n  const canvasRef = useRef(null);\n\n  // Handle Image Upload\n  const handleImageUpload = async (event) => {\n    const file = event.target.files[0];\n    setImage(file);\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/upload/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      console.log('Uploaded Image:', response.data);\n      setImageSrc(response.data.file_location); // Set the image source for the canvas\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n\n  // Handle Mask Export\n  const handleExport = () => {\n    if (canvasRef.current) {\n      const maskDataUrl = canvasRef.current.getDataURL(\"image/png\");\n      const link = document.createElement('a');\n      link.href = maskDataUrl;\n      link.download = 'mask.png';\n      link.click();\n      // Upload mask to server after export\n      uploadMask(maskDataUrl);\n    }\n  };\n\n  // Handle Mask Upload\n  const uploadMask = async (maskDataUrl) => {\n    const formData = new FormData();\n    formData.append('file', dataURLtoFile(maskDataUrl, 'mask.png'));\n\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/upload-mask/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      console.log('Uploaded Mask:', response.data);\n    } catch (error) {\n      console.error('Error uploading mask:', error);\n    }\n  };\n\n  // Convert Data URL to File for uploading\n  const dataURLtoFile = (dataUrl, filename) => {\n    const arr = dataUrl.split(',');\n    const mime = arr[0].match(/:(.*?);/)[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, { type: mime });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Image Inpainting Widget</h1>\n\n        {/* Image Upload */}\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\n        {imageSrc && (\n          <div>\n            {/* Canvas for drawing the mask */}\n            <CanvasDraw\n              ref={canvasRef}\n              imgSrc={imageSrc}\n              brushColor=\"white\"\n              brushRadius={brushSize} \n              canvasWidth={500}\n              canvasHeight={500}\n            />\n            <div>\n              <button onClick={() => setBrushSize(brushSize + 1)}>Increase Brush Size</button>\n              <button onClick={() => setBrushSize(brushSize - 1)}>Decrease Brush Size</button>\n            </div>\n\n            {/* Export Mask Button */}\n            <button onClick={handleExport}>Save Mask</button>\n\n            {/* Display the original image */}\n            <div>\n              <h3>Original Image</h3>\n              <img src={imageSrc} alt=\"Original\" width=\"300\" />\n            </div>\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}